version: '3.6'

services: 
  python:
    build:
      context: ./dcoops
      dockerfile: Dockerfile
    restart: always
    networks:
      - dcoops-network
    ports:
      - '8000:8000'
    volumes:
      - type: bind
        source: .
        target: /discord
    links:
      - 'mysql'
    depends_on:
      - mysql
      - rabbitMQ

  mysql:
    image: mysql/mysql-server:latest
    restart: always
    ports:
      - '3306:3306'
    networks:
      - dcoops-network
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=discord
      - MYSQL_ALLOW_EMPTY_PASSWORD=no
    volumes:
      - type: volume
        source: d4e21b5cb2d3eee9ffffa2e040bd701c11108e32f1c1247fa24a28b8e6c667ea
        target: /var/lib/mysql
      - type: bind
        source: .data 
        target: /home/data

  webapp:
    build:
      context: ./webapp/backend
      dockerfile: Dockerfile
    restart: on-failure
    env_file: ./webapp/backend/.env
    networks:
      - dcoops-network
      - core-network
    volumes:
      - type: bind
        source: .
        target: /home/backenduser
    links:
      - 'mysql'
      - 'rabbitMQ'
    depends_on:
      - mysql
      - rabbitMQ
  
  frontend:
    build:
      context: ./webapp/frontend
      dockerfile: Dockerfile
    restart: on-failure
    env_file: ./webapp/frontend/.env
    networks:
      - dcoops-network
      - core-network
    ports: 
      - '3000:3000'

  rabbitMQ:
    image: rabbitmq:3.9-management
    restart: always
    networks:
      - dcoops-network
    ports: 
      - '5672:5672'
      - '15672:15672'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: none

volumes: 
  d4e21b5cb2d3eee9ffffa2e040bd701c11108e32f1c1247fa24a28b8e6c667ea:
    external: true

networks:
  core-network: 
    external: true
  dcoops-network:
    external: false